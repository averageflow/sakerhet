# Run CI processes to ensure continuous quality and safety
#
# This workflow performs several checks in parallel:
#   - run unit tests
#   - run integration tests
#   - run linting of the project
#
# - name: Configure Git for Go private modules
#   env:
#     TOKEN: ${{ secrets.GIS_BOT_TOKEN }}
#   run: |
#     git config --global \
#       url."https://gis-bot:${TOKEN}@github.com/ingka-group-digital".insteadOf \
#       "https://github.com/ingka-group-digital"
#
on: [push, pull_request]
env:
  GOLANG_VERSION: 1.19
  GOLANG_CI_LINT_VERSION: "v1.50"
  GOLANG_CACHE_DEPENDENCIES: true
jobs:
  run_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: ${{ env.GOLANG_CACHE_DEPENDENCIES }}
      - run: make test
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-coverage-report-${{ github.sha }}
          path: coverage.html
  run_integration_tests:
    runs-on: ubuntu-latest
    env:
      # each integration test in pipeline should be done within 1 minute
      SAKERHET_INTEGRATION_TEST_TIMEOUT: 60
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: ${{ env.GOLANG_CACHE_DEPENDENCIES }}
      - run: make integration-test
      - name: Upload Go test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-coverage-report-${{ github.sha }}
          path: coverage.html
  run_linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}
          cache: ${{ env.GOLANG_CACHE_DEPENDENCIES }}
      - uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANG_CI_LINT_VERSION }}
